#!/usr/bin/env -S bash -x
#
# /usr/sbin/qm — wrapper that:
#   • picks & sets a GPU
#   • starts the VM
#   • schedules a single reboot via nohup so QEMU cold-boots with the GPU

REALQM=/usr/sbin/qm.distrib
PICKER=/usr/local/share/pve-hook-scripts/gpu-autopick.sh
LOGFILE=/var/log/qm-wrapper-reboot.log

log(){ echo "[$(date +'%F %T')] qm-wrapper: $*" >>"$LOGFILE"; }

if [[ "$1" == "start" && "$2" =~ ^[0-9]+$ ]]; then
  vmid=$2

  # ───────────────────────────────────────────────────────────────────────────
  # SKIP VMs 100 & 101: hand off immediately to the real qm.distrib
  # ───────────────────────────────────────────────────────────────────────────
  if [[ "$vmid" == "100" || "$vmid" == "101" ]]; then
    log "skipping GPU logic for VM $vmid"
    exec "$REALQM" "$@"
  fi

  log "==== Detected start for VM $vmid ===="

  # 1) pick GPU
  gpu=$("$PICKER" "$vmid" select 2>/dev/null) || {
    log "ERROR: no GPU selected, aborting start"
    exit 1
  }
  log "picked GPU $gpu for VM $vmid"

  # 2) inject into config
  log "running: qm set $vmid --hostpci0 $gpu --vga none"
  qm set "$vmid" --hostpci0 "$gpu" --vga none \
    || { log "qm set failed"; exit 1; }

  # 3) actually start the VM
  log "calling real qm start $vmid"
  "$REALQM" start "$vmid" "${@:3}" || exit $?

  # 4) schedule a one-shot reboot in 20s
  log "scheduling reboot in 20s (detached)"
  nohup bash -c '
    sleep 20
    FLAG="/var/run/qm-rebooted-'$vmid'"
    if [[ ! -f $FLAG ]]; then
      echo "['$(date +'%F %T')'] qm-wrapper: performing delayed reboot of VM '$vmid'" \
         >>"'$LOGFILE'"
      /usr/sbin/qm.distrib reboot '$vmid' >>"'$LOGFILE'" 2>&1
      touch $FLAG
    else
      echo "['$(date +'%F %T')'] qm-wrapper: reboot already done, skipping" \
         >>"'$LOGFILE'"
    fi
  ' >/dev/null 2>&1 &

  exit 0
fi

# fallback for all other commands
exec "$REALQM" "$@"
